generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("R_DATABASE_URL")
}

model Customer {
  id                String            @id(map: "PK_133ec679a801fab5e070f73d3ea") @default(uuid())
  name              String
  cellphoneNumber   String            @map("cellphone_number")
  email             String            @unique(map: "UQ_8536b8b85c06969f84f0c098b03")
  password          String
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @default(now()) @map("updated_at")
  customerAddresses CustomerAddress[]

  @@map("customers")
}

model CustomerAddress {
  id           String   @id(map: "PK_336bda7b0a0cd04241f719fc834") @default(uuid())
  street       String
  number       Int
  neighborhood String
  city         String
  state        String
  country      String   @default("Brazil")
  postalCode   String   @map("postal_code")
  complement   String?
  isMain       Boolean  @default(false) @map("is_main")
  customerId   String   @map("customer_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")
  customer     Customer @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_addresses_fk")

  @@map("customer_addresses")
}

model Category {
  id                      String                @id(map: "PK_24dbc6126a28ff948da33e97d3b") @default(uuid())
  name                    String                @unique(map: "UQ_8b0be371d28245da6e4f4b61878")
  description             String?
  createdAt               DateTime              @default(now()) @map("created_at")
  updatedAt               DateTime              @default(now()) @map("updated_at")
  categoriesSubCategories CategorySubCategory[]

  @@map("categories")
}

model SubCategory {
  id                      String                @id(map: "PK_793ef34ad0a3f86f09d4837007c") @default(uuid())
  name                    String                @unique(map: "UQ_d1a3a67c9c5d440edf414af1271")
  description             String?
  createdAt               DateTime              @default(now()) @map("created_at")
  updatedAt               DateTime              @default(now()) @map("updated_at")
  categoriesSubCategories CategorySubCategory[]

  @@map("subcategories")
}

model CategorySubCategory {
  id            String      @id(map: "PK_c7a667a9c837e1b64fd4853f545") @default(uuid())
  categoryId    String      @map("category_id")
  subcategoryId String      @map("subcategory_id")
  category      Category    @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8f33ce13d40e4406869b3f46677")
  subcategory   SubCategory @relation(fields: [subcategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ab3f83bd89a14ab3fea9770f8a7")
  products      Product[]

  @@map("categories_subcategories")
}

model Product {
  id                    String              @id(map: "PK_0806c755e0aca124e67c0cf6d7d") @default(uuid())
  name                  String
  description           String?
  categorySubcategoryId String              @map("category_subcategory_id")
  createdAt             DateTime            @default(now()) @map("created_at")
  updatedAt             DateTime            @default(now()) @map("updated_at")
  variations            ProductVariation[]
  categorySubcategory   CategorySubCategory @relation(fields: [categorySubcategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_subcategories_fk")

  @@map("products")
}

model ProductVariation {
  id        String   @id(map: "PK_353249b2d301e047dde9ef0487c") @default(uuid())
  price     Float
  color     String?
  size      String?
  imageUrl  String?  @map("image_url")
  stock     Int
  productId String   @map("product_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  product   Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_fk")

  @@map("product_variations")
}

model PaymentMethod {
  id        String   @id() @default(uuid())
  name      String
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("payment_methods")
}
